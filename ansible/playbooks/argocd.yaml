---
- name: Déployer ArgoCD (GitOps)
  hosts: localhost
  gather_facts: no

  tasks:
    - name: "S'assurer que le namespace 'argocd' existe"
      kubernetes.core.k8s:
        name: argocd
        api_version: v1
        kind: Namespace
        state: present

    - name: "Ajouter le Chart Repo d'Argo"
      kubernetes.core.helm_repository:
        name: argo
        repo_url: https://argoproj.github.io/argo-helm
        state: present

    - name: "Nettoyage : Supprimer les anciens CRDs ArgoCD (s'ils existent)"
      kubernetes.core.k8s:
        state: absent
        api_version: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        name: "{{ item }}"
      loop:
        - applications.argoproj.io
        - appprojects.argoproj.io
        - applicationsets.argoproj.io
      ignore_errors: true

    - name: "Nettoyage : Supprimer les anciens ClusterRoles ArgoCD (s'ils existent)"
      kubernetes.core.k8s:
        state: absent
        api_version: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        name: "{{ item }}"
      loop:
        - argocd-application-controller
        - argocd-server
        - argocd-cluster-role-binding
        - argocd-application-controller-binding
      ignore_errors: true

    - name: "Nettoyage : Supprimer les anciens ClusterRoleBindings ArgoCD"
      kubernetes.core.k8s:
        state: absent
        api_version: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        name: "{{ item }}"
      loop:
        - argocd-application-controller
        - argocd-server
      ignore_errors: true

    - name: "Déployer ArgoCD depuis le Chart Helm"
      kubernetes.core.helm:
        name: argocd
        chart_ref: argo/argo-cd
        release_namespace: argocd
        state: present
        wait: true
        timeout: 600s